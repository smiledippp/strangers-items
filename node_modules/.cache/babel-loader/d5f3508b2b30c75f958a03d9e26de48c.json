{"ast":null,"code":"var _jsxFileName = \"/home/menou/course-work/strangers-things/strangers-items/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, useHistory, useParams } from 'react-router-dom';\nimport { Homepage, Login, createPost, onePost, postList, Header } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2206-ftb-et-web-ft-b\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  const [token, setToken] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [willDeliver, setWillDeliver] = useState(false);\n  const [search, setSearch] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState('');\n  const [message, setMessage] = useState('');\n  const [myData, setMyData] = useState([]);\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setToken: setToken,\n      isLoggedIn: isLoggedIn,\n      setIsLoggedIn: setIsLoggedIn,\n      setusername: setusername,\n      setpassword: setpassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          history: history\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          baseURL: baseURL,\n          username: username,\n          setusername: setusername,\n          setpassword: setpassword,\n          password: password,\n          token: token,\n          setToken: setToken,\n          history: history,\n          isLoggedIn: isLoggedIn,\n          setIsLoggedIn: setIsLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"IWbRQn/2KIRlu5rr7ZW2Pyt8LXY=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nconst appElement = document.getElementById(\"app\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 5\n}, this), appElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","BrowserRouter","Router","Switch","useHistory","useParams","Homepage","Login","createPost","onePost","postList","Header","baseURL","App","posts","setPosts","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","username","setusername","password","setpassword","token","setToken","title","setTitle","description","setDescription","price","setPrice","willDeliver","setWillDeliver","search","setSearch","filteredPosts","setFilteredPosts","message","setMessage","myData","setMyData","history","appElement","document","getElementById","render"],"sources":["/home/menou/course-work/strangers-things/strangers-items/src/index.js"],"sourcesContent":["\nimport React, {useEffect, useState} from 'react'\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, useHistory, useParams} from 'react-router-dom';\nimport { Homepage, Login, createPost, onePost, postList, Header} from './components'; \nconst baseURL = \"https://strangers-things.herokuapp.com/api/2206-ftb-et-web-ft-b\"\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [currentUser, setCurrentUser] = useState({});\n    const [username, setusername] = useState('');\n    const [password, setpassword] = useState('');\n    const [token, setToken] = useState('');\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [willDeliver, setWillDeliver] = useState(false);\n    const [search, setSearch] = useState('');\n    const [filteredPosts, setFilteredPosts] = useState('');\n    const [message, setMessage] = useState('');\n    const [myData, setMyData] = useState([]);\n    let history = useHistory();\n\n    return (\n        <>\n            <Header setToken={setToken} isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} setusername={setusername} setpassword={setpassword}/>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home history={history}/>\n                </Route>\n                {/* <Route exact path=\"/posts\">\n                    <Post username={username} history={history} filteredPosts={filteredPosts} setFilteredPosts={setFilteredPosts} baseURL={baseURL} setPosts={setPosts} posts={posts} search={search} setSearch={setSearch}/>\n                </Route>\n                <Route path=\"/posts/add\">\n                    <AddPost title={title} token={token} baseURL={baseURL} history={history} isLoggedIn={isLoggedIn} setTitle={setTitle} description={description} setDescription={setDescription}\n                    price={price} setPrice={setPrice} willDeliver={willDeliver} setWillDeliver={setWillDeliver}/>\n                </Route>\n                <Route path=\"/posts/:id\">\n                    <SinglePost username={username} message={message} setMessage={setMessage} history={history} baseURL={baseURL} useParams={useParams} posts={posts} token={token}/>\n                </Route>\n                <Route path=\"/message/:id\">\n                    <Message history={history} posts={posts} token={token} message={message} setMessage={setMessage} baseURL={baseURL} useParams={useParams}/>\n                </Route>\n                <Route path=\"/profile\">\n                    <Profile myData={myData} setMyData={setMyData} baseURL={baseURL} token={token} username={username} isLoggedIn={isLoggedIn}/>\n                </Route>\n                <Route path=\"/register\">\n                    <Register baseURL={baseURL} username={username} setusername={setusername} setpassword={setpassword} \n                    password={password} token={token} setToken={setToken} history={history} isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>\n                </Route> */}\n                <Route path=\"/login\">\n                    <Login baseURL={baseURL} username={username} setusername={setusername} setpassword={setpassword} \n                    password={password} token={token} setToken={setToken} history={history} isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\nconst appElement = document.getElementById(\"app\");\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    appElement);"],"mappings":"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"},"metadata":{},"sourceType":"module"}